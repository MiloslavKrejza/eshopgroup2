@using TestWeb.Models.HomeViewModels
@using Trainee.Business.DAL.Entities
@using Trainee.Catalogue.DAL.Entities
@using Trainee.Business.Business.Enums
@model IndexViewModel
@{
    ViewData["Title"] = "Home Page";
}


@{ 
    //TEMP!!
    FrontPageItem item = Model.FrontPageItems.FirstOrDefault(fi => fi.Name.Equals("Nejprodávanější fantasy"));
}
<h2>@item.Name</h2>
<div class="row">
    @await Component.InvokeAsync("Frontpage", new { parameter = Enum.Parse(typeof(SortingParameter), item.SortingParameter), type = Enum.Parse(typeof(SortType), item.SortType), count = item.Count, categoryId = item.CategoryId, timeOffSet = item.TimeOffSet})
</div>

@{
    item = Model.FrontPageItems.FirstOrDefault(fi => fi.Name.Equals("Nejlepší horory"));
}
<h2>@item.Name</h2>
<div class="row">
    @await Component.InvokeAsync("Frontpage", new { parameter = Enum.Parse(typeof(SortingParameter), item.SortingParameter), type = Enum.Parse(typeof(SortType), item.SortType), count = item.Count, categoryId = item.CategoryId, timeOffSet = item.TimeOffSet })
</div>
<div class="index-commercial">
    <img src="~/images/index-commercial.png" alt="book commercial" />
</div>
@{
    item = Model.FrontPageItems.FirstOrDefault(fi => fi.Name.Equals("Novinky v komiksech"));
}
<h2>@item.Name</h2>
<div class="row">
    @await Component.InvokeAsync("Frontpage", new { parameter = Enum.Parse(typeof(SortingParameter), item.SortingParameter), type = Enum.Parse(typeof(SortType), item.SortType), count = item.Count, categoryId = item.CategoryId, timeOffSet = item.TimeOffSet })
</div>