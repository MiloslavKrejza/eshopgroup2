@using Eshop2.Models.CatalogueViewModels;
@using Trainee.Business.DAL.Entities
@using Trainee.Catalogue.DAL.Entities
@using Trainee.Business.Business.Enums

@model ProductsViewModel

@section Scripts
{
    <script>
        $(function () {
            var tooltip = function (sliderObj, ui) {
                val1 = '<div class="slider_tooltip" id="min-price-slider" >' + sliderObj.slider("values", 0) + '</div>';
                val2 = '<div class="slider_tooltip" id="max-price-slider" >' + sliderObj.slider("values", 1) + '</div>';
                sliderObj.children('.ui-slider-handle').first().html(val1);
                sliderObj.children('.ui-slider-handle').last().html(val2);
                minPriceInput = $("#min-price");
                minPriceSlider = $("#min-price-slider");
                maxPriceInput = $("#max-price");
                maxPriceSlider = $("#max-price-slider");
            };
            $("#priceFilter").slider(
                {
                    range: true,
                    min: @Math.Floor(Model.MinPrice.Value),
                    max: @Math.Ceiling(Model.MaxPrice.Value),
                    values: [ @Math.Floor(Model.MinPrice.Value), @Math.Ceiling(Model.MaxPrice.Value) ],
                    slide: function (e, ui) {
                        tooltip($(this), ui);
                        minPriceInput.val(minPriceSlider.html());
                        maxPriceInput.val(maxPriceSlider.html());
                    },
                    create: function (e, ui) {
                        tooltip($(this), ui);
                        minPriceInput.val(minPriceSlider.html());
                        maxPriceInput.val(maxPriceSlider.html());
                    }
                });
        });
    </script>
}

@{
    ViewData["Title"] = Html.DisplayFor(model => model.currentCategory.Name);
}
<h2>@ViewData["Title"]</h2>


<form id="filtering-form" class="bottom-padding">

    <div class="row filters">

        <input id="filter-page-num" type="hidden" asp-for="PageNum" value="1" />
        <div class="col-md-3">
            <label asp-for="AuthorsFilter">Autor</label>
            <select class="form-control selectpicker" asp-for="AuthorsFilter" data-live-search="true">
                <option selected value="@null">Hledat...</option>
                @{
                    foreach (Author a in Model.Authors)
                    {
                        <option value="@a.AuthorId">@a.Surname, @a.Name</option>}
                }
            </select>
        </div>
        <div class="col-md-2">
            <label asp-for="PublishersFilter">Vydavatelství</label>
            <select class="form-control " asp-for="PublishersFilter">
                <option selected value="@null">Všechna</option>
                @{
                    foreach (Publisher p in Model.Publishers)
                    {
                        <option value="@p.Id">@p.Name</option>}
                }
            </select>
        </div>
        <div class="col-md-3">
            <label asp-for="MinPriceFilter">Cena</label>
            <div id="priceFilter"></div>
            <input type="hidden" name="MinPriceFilter" value="@Math.Truncate(Model.MinPrice.Value)" id="min-price" />
            <input type="hidden" name="MaxPriceFilter" value="@Math.Ceiling(Model.MaxPrice.Value)" id="max-price" />
        </div>

        <div class="col-md-2">
            <label asp-for="LanguagesFilter">Jazyk</label>
            <select class="form-control " asp-for="LanguagesFilter">
                <option selected value="@null">Všechny</option>
                @{
                    foreach (Language l in Model.Languages)
                    {
                        <option value="@l.Id">@l.Name</option>}
                }
            </select>
        </div>

        <div class="col-md-2">
            <label asp-for="FormatsFilter">Formát</label>
            <select class="form-control " asp-for="FormatsFilter">
                <option selected value="@null">Všechny</option>
                @{
                    foreach (Format f in Model.Formats)
                    {
                        <option value="@f.Id">@f.Name</option>}
                }
            </select>
        </div>
    </div>

    <div class="row filters">

        <div class="col-md-3">
            <label asp-for="SortingParameter">Řadit podle...</label>
            <select class="form-control" asp-for="SortingParameter" asp-items="Html.GetEnumSelectList<SortingParameter>()"></select>
        </div>
        <div class="col-md-2">
            <label asp-for="SortingType">Řadit...</label>
            <select class="form-control" asp-for="SortingType" asp-items="Html.GetEnumSelectList<SortType>()"></select>
        </div>
        <div class="col-md-3">
            <label asp-for="PageSize">Knih na stránce</label>
            <select class="form-control" asp-for="PageSize">
                <option selected value="20">20</option>
                <option value="8">8</option>
                <option value="40">40</option>
                <option value="100">100</option>
            </select>
        </div>
        <div class="col-md-2 text-center">
            <button id="button-filter" type="submit" class="filter-btn btn btn-prim">Filtrovat</button>
        </div>
        <div class="col-md-2 text-center">
            <a class="filter-btn btn btn-default" asp-area="" asp-controller="Catalogue" asp-action="Products" asp-route-id="2" asp-route-pageNum="1">Vymazat filtry</a>
        </div>
    </div>
</form>

<hr class="bottom-padding" />


<div class="row">
    @{

        for (int i = 0; i < Model.Products.Count; i++)
        {

            ProductBO p = Model.Products[i];
            <div class="col-lg-3 text-center product">
                <a asp-area="" asp-controller="catalogue" asp-action="book" asp-route-id="@p.Id">
                    <img class="book-picture" src="~/images/product_images/@p.PicAddress" alt="@p.Name" />
                    <p class="bold book-title">@p.Name</p>
                    <p class="book-authors">

                        @{
                            @*Write out first two authors*@
                        var ab = p.Book.AuthorsBooks;

                        for (int j = 0; j < ab.Count; j++)

                        {
                            if (j == 0)
                            {
                                @ab[j].Author.Name @Html.Raw(" ") @ab[j].Author.Surname

                                }
                                else if (j == 1)
                                {
                                    @Html.Raw(", ")@ab[j].Author.Name @Html.Raw(" ") @ab[j].Author.Surname
                                }
                                else
                                {
                                    @Html.Raw(" a další")
                                    break;

                                }
                            }
                        }
                        <div class="ratings">
                            <div class="empty-stars"></div>
                            @{string averageRatingString = (p.AverageRating * 20).ToString().Replace(',', '.'); }
                            <div class="full-stars" id="insertTheValue" style="width:@averageRatingString%"></div>
                        </div>
                    </p>

                    @{
                        if (p.State.Name != "Dostupná")
                        {
                            <p class="italics text-danger">@p.State.Name</p>
                        }
                        else
                        {
                            <p class="italics">@p.State.Name</p>
                        }
                    }

                    <p>@String.Format("{0:C}", p.Price)</p>
                </a>
                <input type="hidden" value="@p.Id" name="product-id" />
                <input type="hidden" name="product-count" class="hidden" value="1" />
                @if (p.State.Name == "Dostupná")
                {
                    <button class="btn-addtocart btn btn-prim">Do košíku</button>
                }
                else
                {
                    <button class="btn-addtocart btn btn-prim" disabled>Do košíku</button>
                }

            </div>

                        if ((i + 1) % 4 == 0)
                        {
                            if ((i + 1) % Model.PageSize == 0) {break;}

                            @Html.Raw("</div>")
                            @Html.Raw("<hr class='bottom-padding' />")
                            @Html.Raw("<div class='row'>")
                            }
                        }

    }

</div>
<div class="text-center">
    <a asp-area="" asp-controller="Catalogue" asp-action="Products" asp-route-id="" asp-route-pageNum=""></a>
    <!-- pager -->
    @if (Model.PageNum >= 1)
    {
        var LastPage = (int)Math.Ceiling((double)Model.ResultCount / (double)Model.PageSize);
        if (LastPage > 7)
        {
            int startPage;

            if (Model.PageNum <= 4)
            {
                startPage = 2;
            }
            else if (LastPage - Model.PageNum <= 3)
            {
                startPage = LastPage - 5;
            }
            else
            {
                startPage = Model.PageNum.Value - 2;
            }

            <ul class="pagination">
                @if (Model.PageNum > 0)
                {
                    <li class="@(Model.PageNum == 1 ? "active" : "") "><span class="paging-span" page-num="1">První</span></li>}

                @for (int i = 0; i < 5; i++)
                {
                    <li class="@(startPage + i == Model.PageNum ? "active" : "")">
                        <span class="paging-span" page-num="@(startPage + i)">@(startPage + i)</span>
                    </li>}

                @if (Model.PageNum <= LastPage)
                {



                    <li class=@(LastPage == Model.PageNum ? "active" : "" )>
                        <span class="paging-span" page-num="@(Math.Ceiling((double)Model.ResultCount / (double)Model.PageSize))">Poslední</span>

                    </li>}
            </ul>
        }
        else
        {
            <ul class="pagination">
                <li class="@(Model.PageNum == 1 ? "active" : "") "><span class="paging-span" page-num="1">První</span></li>
                @for (int i = 2; i < LastPage; i++)
                {
                    <li class="@(i == Model.PageNum ? "active" : "")">
                        <span class="paging-span" page-num="@(i)">@(+i)</span>
                    </li>
                }
                @if (LastPage > 1)
                {
                    <li class="@(LastPage == Model.PageNum ? "active" : "")">
                        <span class="paging-span" page-num="@(LastPage)">Poslední</span>
                    </li>
                }
            </ul>
        }

    }
</div>
