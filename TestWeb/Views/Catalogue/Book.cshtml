@using Eshop2.Models.CatalogueViewModels;
@using Trainee.Catalogue.DAL.Entities
@model BookViewModel

@{
	ViewData["Title"] = "Harry Potter";
}

<div class="row">
	<ul class="breadcrumb main-background">
		<li class="main-cathegory"><a href="#">Fantasy</a></li>
		<li><a href="#">@Html.DisplayFor(model => model.CategoryName)</a></li>
	</ul>
</div>
<hr />
<div class="row">
	<h2>@Html.DisplayFor(model => model.Name)</h2>
	<div class="col-lg-8">
		<p>
			@foreach (Author a in Model.Authors)
			{<span class="bold">@a.Name @a.Surname, </span> }
		</p>
		<p class="italics">@Html.DisplayFor(model => model.ProductFormat)</p>
		<p>@Html.DisplayFor(model => model.Rating)</p>
		<p>@Html.DisplayFor(model => model.Annotation)</p>
		<p>@Html.DisplayFor(model => model.ProductText)</p>

		@if (Model.State == "available")
		{
			<p class="text-success">
				@Html.DisplayFor(model => model.State)
			</p>
		}
		else
		{
			<p class="text-warning">
				@Html.DisplayFor(model => model.State)
			</p>
		}
		<p>@Html.DisplayFor(model => model.Price) Kč</p>
		<button class="btn btn-primary">Do košíku</button>
	</div>
	<div class="col-lg-4">
		<div class="row">
			<img class="book-img" src="https://ewedit.files.wordpress.com/2016/09/hpsorcstone.jpg?w=405" alt="Harry Potter" />
		</div>
	</div>
</div>
<hr />
<div class="row">
	<div class="col-md-6">
		<table class="details-table">
			<tr>
				<td class="col-md-6">Jazyk:</td>
				<td class="col-md-6 details-right">@Html.DisplayFor(model => model.Language)</td>
			</tr>
			<tr>
				<td class="col-md-6">Počet stran:</td>
				<td class="col-md-6 details-right">@Html.DisplayFor(model => model.PageCount)</td>
			</tr>
			<tr>
				<td class="col-md-6">Rok vydání:</td>
				<td class="col-md-6 details-right">@Html.DisplayFor(model => model.Year)</td>
			</tr>
		</table>
	</div>
	<div class="col-md-6">
		<table class="details-table">
			<tr>
				<td class="col-md-6">Vydavatel:</td>
				<td class="col-md-6">@Html.DisplayFor(model => model.Publisher)</td>
			</tr>
			<tr>
				<td class="col-md-6">ISBN:</td>
				<td class="col-md-6">@Html.DisplayFor(model => model.ISBN)</td>
			</tr>
			<tr>
				<td class="col-md-6">EAN:</td>
				<td class="col-md-6">@Html.DisplayFor(model => model.EAN)</td>
			</tr>
		</table>
	</div>
</div>
<hr />
<div class="row rating">
	
    <h3>Hodnocení</h3> 
    <img src="http://www.dtsg.com/sites/default/themes/garden/images/five-stars.png" alt="rating" />
    <div class="user-rating">
        <img src="~/images/user-2-32.png" alt="user icon" /><span class="bold">Petr B.</span><img src="http://www.dtsg.com/sites/default/themes/garden/images/five-stars.png" /><br />
        <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Etiam egestas wisi a erat. Nulla turpis magna, cursus sit amet, suscipit a, interdum id, felis. Nam sed tellus id magna elementum tincidunt. Pellentesque pretium lectus id turpis. Mauris metus. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.</p>
    </div>

	<hr />
	
	<h3>Ohodnotit produkt</h3>

	<div id="rating">
		<span>★</span>
		<span>★</span>
		<span>★</span>
		<span>★</span>
		<span>★</span>
	

		<div class="centerMePlox">
						
			<form asp-area="" asp-controller="Catalogue" asp-action="Book" method="post" id="sendRatingData" class="navbar-right">

				<input class="form-control" asp-for="NewRating" id="valueHodnota" min="1" max="5"/>
				<label class="text-primary" asp-for="ReviewText">Vzkaz</label>
				<textarea rows="5" cols="20" class="form-control" asp-for="ReviewText">
			
				</textarea>
				<button class="btn btn-primary" type="submit">Click me!</button>
			</form>

		</div>
	</div>
</div>
<hr />
	
<script type="text/javascript">




	var elementos = document.getElementById("valueHodnota");
	elementos.style.display = "none";

	//Initialize
	function StarRating() {
						

						this.init();
			};


	StarRating.prototype.init = function() {
	 this.stars = document.querySelectorAll('#rating span');
	  for (var i = 0; i < this.stars.length; i++) {
			this.stars[i].setAttribute('data-count', i);
			this.stars[i].addEventListener('mouseenter', this.enterStarListener.bind(this));
	  }
	  document.querySelector('#rating').addEventListener('mouseleave', this.leaveStarListener.bind(this));
	};
	//This method is fired when a user hovers over a single star

	StarRating.prototype.enterStarListener = function(e) {
	  this.fillStarsUpToElement(e.target);
	};
		//This method is fired when the user leaves the #rating element, effectively removing all hover states.
		//Fill the star ratings up to a specific position.
	StarRating.prototype.fillStarsUpToElement = function(el) {
	   var soucet = 0;
	  // Remove all hover states:
	  for (var i = 0; i < this.stars.length; i++) {
		if (el == null || this.stars[i].getAttribute('data-count') > el.getAttribute('data-count')) {
		  this.stars[i].classList.remove('hover');
		} else {
		  this.stars[i].classList.add('hover');
		  soucet++;
		  console.log(soucet);

   //   var element = document.getElementById("summaryByMiloslavKrejza");
	  //element.innerHTML = soucet;

	  

		  elementos.setAttribute("value", soucet);
			
		  

		}
	  }
	};

// Run:
new StarRating();


</script>

