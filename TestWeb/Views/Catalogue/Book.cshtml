@using Eshop2.Models.CatalogueViewModels;
@using Trainee.Catalogue.DAL.Entities;
@inject UserManager<ApplicationUser> UserManager;
@inject SignInManager<ApplicationUser> SignInManager;
@model BookViewModel

@{
	ViewData["Title"] = "Harry Potter";

	var result = await UserManager.GetUserAsync(User);

	//pokud je userID aktualní uživatelé NULL -> nastaví se hodnota na -1  -> což je něco jiného než userID jiných uživatelů viz následující if else statement 
	int uId = result == null ? -1 : result.Id;

	var reviewPresent = Model.Reviews.Where(r => r.UserId == uId).Where(r => r.ProductId == (int)ViewData["productId"]).FirstOrDefault();

	var reviewCounter = 0;


}



<style type="text/css">

	.ratings {
    position: relative;
    vertical-align: middle;
    display: inline-block;
    color: #b1b1b1;
    overflow: hidden;
}
.full-stars {
    position: absolute;
    left: 0;
    top: 0;
    white-space: nowrap;
    overflow: hidden;
    color: #fde16d;
}
.empty-stars:before, .full-stars:before {
    content:"\2605\2605\2605\2605\2605";
    font-size: 14pt;
}
.empty-stars:before {
    -webkit-text-stroke: 1px #848484;
}
.full-stars:before {
    -webkit-text-stroke: 1px orange;
}
/* Webkit-text-stroke is not supported on firefox or IE */

/* Firefox */
 @@-moz-document url-prefix() {
    .full-stars {
        color: #ECBE24;
    }
}
</style>

<div class="row">
	<ul class="breadcrumb main-background">
		<li class="main-cathegory"><a href="#">Fantasy</a></li>
		<li><a href="#">@Html.DisplayFor(model => model.Category.Name)</a></li>
	</ul>
</div>
<hr />
<div class="row">
	<h2>@Html.DisplayFor(model => model.Name)</h2>
	<div class="col-lg-8">
		<p>
			@foreach (Author a in Model.Authors)
			{
				<span class="bold">@a.Name @a.Surname, </span> 
			}
		</p>
		<p class="italics">@Html.DisplayFor(model => model.ProductFormat)</p>

		<div class="ratings">
			<div class="empty-stars"></div>

			<!--	Need to use javascript here due to e-->
			<div class="full-stars" id="insertTheValue"></div>
			<span id="takeTheValue" style="display:none;">@Model.StarPercent</span>
			
		</div>

		





		@*<div itemscope itemtype="http://schema.org/Product" style="display:none;" >
			<img itemprop="image" src="~/images/product_images/@Model.PicAddress" alt="@Html.DisplayFor(model => model.Name)" />
			<span itemprop="name">@Html.DisplayFor(model => model.Name)</span>
			<div itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
				<span itemprop="ratingValue">@Html.DisplayFor(model => model.AverageRating)</span>
				out of <span itemprop="bestRating">5</span>
				based on <span itemprop="ratingCount"></span> user ratings.
			</div>
		</div>*@

			<p>@Html.DisplayFor(model => model.Annotation)</p>
			<p>@Html.DisplayFor(model => model.ProductText)</p>

			@if (Model.State == "available")
			{
				<p class="text-success">
					@Html.DisplayFor(model => model.State)
				</p>
			}
			else
			{
				<p class="text-warning">
					@Html.DisplayFor(model => model.State)
				</p>
			}
			<p>@Html.DisplayFor(model => model.Price) Kč</p>
			<button class="btn btn-primary">Do košíku</button>
		</div>
	<div class="col-lg-4">
		<div class="row">

			@*Route to image files directed from database*@

			<img class="book-img" src="https://ewedit.files.wordpress.com/2016/09/hpsorcstone.jpg?w=405" alt="Harry Potter" />
		</div>
	</div>
</div>
<hr />
<div class="row">
	<div class="col-md-6">
		<table class="details-table">
			<tr>
				<td class="col-md-6">Jazyk:</td>
				<td class="col-md-6 details-right">@Html.DisplayFor(model => model.Language)</td>
			</tr>
			<tr>
				<td class="col-md-6">Počet stran:</td>
				<td class="col-md-6 details-right">@Html.DisplayFor(model => model.PageCount)</td>
			</tr>
			<tr>
				<td class="col-md-6">Rok vydání:</td>
				<td class="col-md-6 details-right">@Html.DisplayFor(model => model.Year)</td>
			</tr>
		</table>
	</div>
	<div class="col-md-6">
		<table class="details-table">
			<tr>
				<td class="col-md-6">Vydavatel:</td>
				<td class="col-md-6">@Html.DisplayFor(model => model.Publisher)</td>
			</tr>
			<tr>
				<td class="col-md-6">ISBN:</td>
				<td class="col-md-6">@Html.DisplayFor(model => model.ISBN)</td>
			</tr>
			<tr>
				<td class="col-md-6">EAN:</td>
				<td class="col-md-6">@Html.DisplayFor(model => model.EAN)</td>
			</tr>
		</table>
	</div>
</div>
<hr />


	
    @*
		<h3>Hodnocení</h3> 
    <img src="http://www.dtsg.com/sites/default/themes/garden/images/five-stars.png" alt="rating" />
    <div class="user-rating">
        <img src="~/images/user-2-32.png" alt="user icon" /><span class="bold">Petr B.</span><img src="http://www.dtsg.com/sites/default/themes/garden/images/five-stars.png" /><br />
        <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Etiam egestas wisi a erat. Nulla turpis magna, cursus sit amet, suscipit a, interdum id, felis. Nam sed tellus id magna elementum tincidunt. Pellentesque pretium lectus id turpis. Mauris metus. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.</p>
    </div>

	<hr />

		*@
				<!--	Is user logged in? -->
				
@if (reviewPresent != null)
{
	@reviewPresent.Rating
	<!--	Representation of present user desctiption-->

	<div class="user-rating">
		<img src="@reviewPresent.User.ProfilePicAddress" alt="@reviewPresent.User.Name" /><span class="bold">@reviewPresent.User.Name</span>
		<br />
		<p>@reviewPresent.Text</p>
	</div>

	

}
else
{
	<!-- User loves to hate the product if the page doesn't contain commentary -->
	<div class="row rating">
		<div class="col-sm-12">

			<div id="rating">
				<span>★</span>
				<span>★</span>
				<span>★</span>
				<span>★</span>
				<span>★</span>
			</div>		
				<div class="col-sm-12">
					<div class="text-center">

						<form asp-area="" asp-controller="Catalogue" asp-action="Book" method="post" id="sendRatingData" class="navbar-right" style="max-width: 100%;" >

							<input class="form-control" asp-for="NewRating" id="valueHodnota" min="1" max="5" />
							<label class="text-primary" asp-for="ReviewText">Vzkaz</label>	
							<textarea  class="form-control" rows="8" cols="500" asp-for="ReviewText" style="max-width: 100%; " required></textarea>
							<br />
							<button class="btn btn-primary" type="submit">Click me!</button>
							<br />
						</form>


					</div>
				</div>
			</div>
	</div>
	<hr />
}

<!--	You have chosen to show others cool reviews -->

@foreach (var review in Model.Reviews)
{
	reviewCounter++;

	if (review.UserId != uId)
	{
		int procent = (int)Math.Truncate(review.Rating / 5.0 * 100) ;


		<div class="user-rating">
			<div class="ratings">
				<div class="empty-stars"></div>
				<div class="full-stars" style="width:@procent%;"></div>
			</div>
			<span class="bold">@review.User.Name</span>
			<br />
			<p>@review.Text</p>
		</div>

	}



	}


<script src="~/js/averageRating.js"></script>

<script type="text/javascript">




	var elementos = document.getElementById("valueHodnota");
	elementos.style.display = "none";

	//Initialize
	function StarRating() {
				this.init();
			};


	StarRating.prototype.init = function() {
	 this.stars = document.querySelectorAll('#rating span');
	  for (var i = 0; i < this.stars.length; i++) {
			this.stars[i].setAttribute('data-count', i);
			this.stars[i].addEventListener('mouseenter', this.enterStarListener.bind(this));
	  }
	  document.querySelector('#rating').addEventListener('mouseleave', this.leaveStarListener.bind(this));
	};
	//This method is fired when a user hovers over a single star

	StarRating.prototype.enterStarListener = function(e) {
	  this.fillStarsUpToElement(e.target);
	};
		//This method is fired when the user leaves the #rating element, effectively removing all hover states.
		//Fill the star ratings up to a specific position.
	StarRating.prototype.fillStarsUpToElement = function(el) {
	   var soucet = 0;
	  // Remove all hover states:
	  for (var i = 0; i < this.stars.length; i++) {
		if (el == null || this.stars[i].getAttribute('data-count') > el.getAttribute('data-count')) {
		  this.stars[i].classList.remove('hover');
		} else {
		  this.stars[i].classList.add('hover');
		  soucet++;
		  console.log(soucet);

   //   var element = document.getElementById("summaryByMiloslavKrejza");
	  //element.innerHTML = soucet;

	  

		  elementos.setAttribute("value", soucet);
			
		  

		}
	  }
	};

// Run:
new StarRating();


</script>

