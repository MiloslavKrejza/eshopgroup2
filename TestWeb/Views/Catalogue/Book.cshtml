@using Eshop2.Models.CatalogueViewModels;
@using Trainee.Catalogue.DAL.Entities;
@inject UserManager<ApplicationUser> UserManager;
@inject SignInManager<ApplicationUser> SignInManager;
@model BookViewModel

@{
    ViewData["Title"] = Model.Name;

    var result = await UserManager.GetUserAsync(User);

    //pokud je userID aktualní uživatelé NULL -> nastaví se hodnota na -1  -> což je něco jiného než userID jiných uživatelů viz následující if else statement
    int uId = result == null ? -1 : result.Id;

    var reviewPresent = Model.Reviews.Where(r => r.UserId == uId).Where(r => r.ProductId == (int)ViewData["productId"]).FirstOrDefault();

    var reviewCounter = 0;




}


<div class="row">
    <ul class="breadcrumb main-background">
        <li class="main-cathegory"><a href="#">Fantasy</a></li>
        <li><a href="#">@Html.DisplayFor(model => model.Category.Name)</a></li>
    </ul>
</div>
<hr />
<div class="row">
    <h2>@Html.DisplayFor(model => model.Name)</h2>
    <div class="col-lg-8">
        <p class="bold">

            @{var ab = Model.Authors;

                for (int j = 0; j < ab.Count; j++)

                {
                    <span>
                        @ab[j].Name @ab[j].Surname@if (j != ab.Count - 1)
                        {@Html.Raw(", ")}
                    </span>
                }
            }
        </p>

        @if (Model.AverageRating != null)
        {
            <div class="ratings">
                <div class="empty-stars"></div>
                @{
                    string averageRatingString = (Model.AverageRating * 20).ToString().Replace(',', '.');
                }
                <div class="full-stars" id="insertTheValue" style="width:@averageRatingString%"></div>
            </div>
        }
        else
        {
            <p class="no-rating">Bez hodnocení</p>
        }

        <p class="italics">@Html.DisplayFor(model => model.ProductFormat)</p>
        <p>@Html.DisplayFor(model => model.Annotation)</p>
        <p>@Html.DisplayFor(model => model.ProductText)</p>

        @if (Model.State == "Dostupná")
        {
            <p class="text-success">
                @Html.DisplayFor(model => model.State)
            </p>}
        else
        {
            <p class="text-warning">
                @Html.DisplayFor(model => model.State)
            </p>}
        <p>@Html.DisplayFor(model => model.Price) Kč</p>
        <input type="hidden" name="product-id" value="@Model.ProductId" />
        <input type="number" name="product-count" value="1" min="1" class="product-count" />
        @if (Model.State == "Dostupná")
        {
            <button class="btn-addtocart btn btn-prim">Do košíku</button>}
        else
        {
            <button class="btn-addtocart btn btn-prim" disabled>Do košíku</button>}


    </div>


    <div class="col-lg-4">
        <div class="row">

            <img class="book-img" src="~/images/product_images/@Model.PicAddress" alt="@Model.Name" />
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-6">
        <table class="details-table">
            <tr>
                <td class="col-md-6">Jazyk:</td>
                <td class="col-md-6">@Html.DisplayFor(model => model.Language)</td>
            </tr>
            <tr>
                <td class="col-md-6">Počet stran:</td>
                <td class="col-md-6">@Html.DisplayFor(model => model.PageCount)</td>
            </tr>
            <tr>
                <td class="col-md-6">Rok vydání:</td>
                <td class="col-md-6">@Html.DisplayFor(model => model.Year)</td>
            </tr>
        </table>
    </div>
    <div class="col-md-6">
        <table class="details-table">
            <tr>
                <td class="col-md-6">Vydavatel:</td>
                <td class="col-md-6">@Html.DisplayFor(model => model.Publisher)</td>
            </tr>
            <tr>
                <td class="col-md-6">ISBN:</td>
                <td class="col-md-6">@Html.DisplayFor(model => model.ISBN)</td>
            </tr>
            <tr>
                <td class="col-md-6">EAN:</td>
                <td class="col-md-6">@Html.DisplayFor(model => model.EAN)</td>
            </tr>
        </table>
    </div>
</div>
<hr />

<!--	Is user logged in? -->

<h3>Hodnocení</h3>

@if (reviewPresent != null)
{
    decimal stars = reviewPresent.Rating * 20;


	<!--	Representation of present user desctiption-->

    <div class="user-rating">
        <div class="col-md-1 text-center">
            <img src="~/images/profile_pics/@reviewPresent.User.ProfilePicAddress" alt="" />
        </div>
        <div class="col-md-11">
            <span class="bold">@reviewPresent.User.Name @reviewPresent.User.Surname</span>
            <div class="ratings">
                <div class="empty-stars"></div>
                <div class="full-stars" style="width:@stars.ToString()%;"></div>
            </div>
            <p>@reviewPresent.Text</p><br />
        </div>
    </div>


}
else
{
	<!-- User loves to hate the product if the page doesn't contain commentary -->

    <div class="row rating">
        <p class="text-indent">Napište vlastní recenzi:</p>
        <form asp-area="" asp-controller="Catalogue" asp-action="Book" method="post" id="sendRatingData">
            <div class="col-md-6">
                <input class="form-control" asp-for="NewRating" id="valueHodnota" min="1" max="5" />
                <textarea class="form-control rating-textarea" rows="4" asp-for="ReviewText" required></textarea>
            </div>

            <div class="col-md-6">
                <div id="rating">
                    <span class="glyphicon glyphicon-star"></span>
                    <span class="glyphicon glyphicon-star"></span>
                    <span class="glyphicon glyphicon-star"></span>
                    <span class="glyphicon glyphicon-star"></span>
                    <span class="glyphicon glyphicon-star"></span>
                </div>
                <button class="btn btn-prim review-btn" type="submit">Odeslat recenzi</button>
            </div>
        </form>
    </div>
        <hr class="bottom-padding" />
}

<!--	You have chosen to show others cool reviews -->

@foreach (var review in Model.Reviews)
{
    reviewCounter++;

    if (review.UserId != uId)
    {
        int procent = (int)Math.Truncate(review.Rating / 5.0 * 100);


        <div class="user-rating row">
            <div class="col-md-1 text-center">
                <img src="~/images/profile_pics/@Model.PicAddress" />
            </div>
            <div class="col-md-11">
                <span class="bold">@review.User.Name @review.User.Surname</span>
                <div class="ratings">
                    <div class="empty-stars"></div>
                    <div class="full-stars" style="width:@procent%;"></div>
                </div>
                <p>@review.Text</p>
            </div>
        </div>

    }



}


@section Scripts {
    <script type="text/javascript">




        var elementos = document.getElementById("valueHodnota");
        elementos.style.display = "none";

        //Initialize
        function StarRating() {
            this.init();
        };


        StarRating.prototype.init = function () {
            this.stars = document.querySelectorAll('#rating span');
            for (var i = 0; i < this.stars.length; i++) {
                this.stars[i].setAttribute('data-count', i);
                this.stars[i].addEventListener('mouseenter', this.enterStarListener.bind(this));
            }
            document.querySelector('#rating').addEventListener('mouseleave', this.leaveStarListener.bind(this));
        };
        //This method is fired when a user hovers over a single star

        StarRating.prototype.enterStarListener = function (e) {
            this.fillStarsUpToElement(e.target);
        };
        //This method is fired when the user leaves the #rating element, effectively removing all hover states.
        //Fill the star ratings up to a specific position.
        StarRating.prototype.fillStarsUpToElement = function (el) {
            var soucet = 0;
            // Remove all hover states:
            for (var i = 0; i < this.stars.length; i++) {
                if (el == null || this.stars[i].getAttribute('data-count') > el.getAttribute('data-count')) {
                    this.stars[i].classList.remove('hover');
                } else {
                    this.stars[i].classList.add('hover');
                    soucet++;
                    console.log(soucet);

                    //   var element = document.getElementById("summaryByMiloslavKrejza");
                    //element.innerHTML = soucet;



                    elementos.setAttribute("value", soucet);



                }
            }
        };

        // Run:
        new StarRating();


    </script>
}
